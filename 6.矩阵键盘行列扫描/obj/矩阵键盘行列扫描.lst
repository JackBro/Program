C51 COMPILER V9.05   ________________                                                      05/08/2012 11:18:39 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE ________________
OBJECT MODULE PLACED IN .\obj\矩阵键盘行列扫描.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\矩阵键盘行列扫描.c BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\矩阵键盘行列扫
                    -描.lst) OBJECT(.\obj\矩阵键盘行列扫描.obj)

line level    source

   1          /*--------------------------------------------------------------------
   2          名称：矩阵键盘
   3          公司：南京爱思电子
   4          编写：rantg
   5          内容: 矩阵键盘行列扫描并在数码管显示相应的键值
   6          --------------------------------------------------------------------*/
   7          
   8          #include <reg52.h>
   9          
  10          typedef unsigned char uchar;
  11          typedef unsigned int  uint;
  12          
  13          unsigned char code table[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,
  14                                                   0x77,0x7c,0x39,0x5e,0x79,0x71};//0-F
  15           
  16          uchar KeyScan(void);
  17          void DelayMs(uint i);
  18          
  19          void main(void)
  20          {
  21   1              uchar key;
  22   1              P0 = 0x00;                      //1数码管亮 按相应的按键，会显示按键上的字符
  23   1              P1 = 0xf7;
  24   1              while(1)
  25   1              {
  26   2                      key=KeyScan();  //调用键盘扫描，
  27   2                      switch(key)
  28   2                      {                  
  29   3                              case 0x7e:P0 = table[0];break;//0 按下相应的键显示相对应的码值
  30   3                              case 0x7d:P0 = table[1];break;//1
  31   3                              case 0x7b:P0 = table[2];break;//2
  32   3                              case 0x77:P0 = table[3];break;//3
  33   3                              case 0xbe:P0 = table[4];break;//4
  34   3                              case 0xbd:P0 = table[5];break;//5
  35   3                              case 0xbb:P0 = table[6];break;//6
  36   3                              case 0xb7:P0 = table[7];break;//7
  37   3                              case 0xde:P0 = table[8];break;//8
  38   3                              case 0xdd:P0 = table[9];break;//9
  39   3                              case 0xdb:P0 = table[10];break;//a
  40   3                              case 0xd7:P0 = table[11];break;//b
  41   3                              case 0xee:P0 = table[12];break;//c
  42   3                              case 0xed:P0 = table[13];break;//d
  43   3                              case 0xeb:P0 = table[14];break;//e
  44   3                              case 0xe7:P0 = table[15];break;//f
  45   3                      }
  46   2              }
  47   1      }
  48          
  49          uchar KeyScan(void)//键盘扫描函数，使用行列反转扫描法
  50          {
  51   1              uchar cord_h,cord_l;    //行列值
  52   1              P3 = 0xf0;            //行线输出全为0
  53   1              cord_h = P3&0xf0;     //读入列线值
  54   1              if(cord_h != 0xf0)    //先检测有无按键按下
C51 COMPILER V9.05   ________________                                                      05/08/2012 11:18:39 PAGE 2   

  55   1              {
  56   2                      DelayMs(100);        //去抖
  57   2                      if(cord_h != 0xf0)
  58   2                      {
  59   3                              cord_h = P3&0xf0;  //读入列线值
  60   3                              P3 = cord_h|0x0f;  //输出当前列线值
  61   3                              cord_l = P3&0x0f;  //读入行线值
  62   3                              return(cord_h+cord_l);//键盘最后组合码值
  63   3                      }
  64   2              }
  65   1              return(0xff);     //返回该值
  66   1      }
  67          
  68          
  69          /*------------------------------------------------
  70                                           延时函数
  71          ------------------------------------------------*/
  72          void DelayMs(unsigned int t)
  73          {
  74   1              unsigned char i;
  75   1              for(;t > 0;t--)
  76   1                      for(i = 110;i > 0;i--);
  77   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    223    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
